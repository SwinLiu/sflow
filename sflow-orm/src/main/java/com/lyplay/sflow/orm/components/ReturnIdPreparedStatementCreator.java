package com.lyplay.sflow.orm.components;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import org.springframework.jdbc.core.PreparedStatementCreator;

import com.lyplay.sflow.orm.utils.ColnumNameUtil;

public class ReturnIdPreparedStatementCreator implements
		PreparedStatementCreator {

	private String sql;
	private Object[] params;
	private String autoGeneratedColumnName;

	public ReturnIdPreparedStatementCreator(String sql,Object[] params, String autoGeneratedColumnName){
		this.sql = sql;
		this.params = params;
		this.autoGeneratedColumnName = autoGeneratedColumnName;
	}
	
	@Override
	public PreparedStatement createPreparedStatement(Connection con)
			throws SQLException {
		
		PreparedStatement ps = con.prepareStatement(sql, new String[] {ColnumNameUtil.camel2underscore(autoGeneratedColumnName)});
        for (int i = 0; i < params.length; i++) {
			Object value = params[i];
			ps.setObject((i+1), value);
		}
        return ps;
	}
	
	/*
	@Override
	public PreparedStatement createPreparedStatement(Connection con)
			throws SQLException {
		
		PreparedStatement ps = con.prepareStatement(sql, new String[] {ColnumNameUtils.camel2underscore(autoGeneratedColumnName)});
        for (int i = 0; i < params.length; i++) {
			Object value = params[i];
			if(value instanceof java.util.Date){
				java.util.Date date = (java.util.Date) value;
				ps.setObject((i+1), new java.sql.Timestamp(date.getTime()));
			} else if(value instanceof java.lang.Integer){
				ps.setObject((i+1), new java.math.BigDecimal(((java.lang.Integer) value).intValue()));
			} else{
				ps.setObject((i+1), value);
			}
			
		}
        return ps;
	}
	*/

}
